:root {
  --colorTransition: background-color 300ms, color 300ms;
  --hue: 300;
  --backgroundColor: hsl(var(--hue), 50%, 75%);

  --baseLayerColor: hsl(var(--hue), 50%, 55%);
  --baseAccentColor: hsl(var(--hue), 50%, 65%);
  --baseTextColor: hsl(var(--hue), 50%, 10%);

  --secondaryBaseColor: hsl(var(--hue), 50%, 35%);
  --secondaryContentColor: hsl(var(--hue), 60%, 55%);

  --mainLayerShadow: 0 0 1rem 0.5rem rgba(0, 0, 0, 0.3);
  font-family: sans-serif;
  font-size: clamp(0.5em, min(1.2dvw, 1.2dvh), 2rem);
}

body {
  background-color: var(--backgroundColor);
  display: flex;
  height: 100dvh;
  width: 100dvw;
  flex-direction: row;
  margin: 0;
  overflow: hidden;
  transition: var(--colorTransition)
}

div.mainPanel {
  background-color: var(--baseLayerColor);
  color: var(--baseTextColor);
  border-radius: 17px;
  display: flex;
  box-shadow: var(--mainLayerShadow);
  flex: 1 1 auto;
  padding: 2rem;
  gap: 2rem;
  margin: 1rem;
  flex-direction: column;
  overflow: auto;
  transition: var(--colorTransition);
  overflow: hidden;
  ;
}

div.mainPanel:has(.buttonHidden) {
  gap: 0;
}

div.mainContent {
  display: flex;
  gap: 1rem;
  flex-direction: column;
  overflow: auto;
  flex: 1;
}

.textBox {
  background-color: var(--backgroundColor);
  height: 2rem;
  padding: 1rem;
  display: flex;
  gap: 1rem;
  border-radius: 1rem;
  justify-content: center;
  align-items: center;
  flex: 1;
  height: fit-content;

  transition: var(--colorTransition)
}

.textBoxInput {
  background: transparent;
  outline: none;
  border: none;
  padding: 0;
  flex: 1;
  resize: vertical;
  width: 100%;
}


div.wrapContainer {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  gap: 1.5rem;
  overflow: auto;
}

.card {
  display: flex;
  padding-left: 1rem;
  padding-right: 1rem;
  border-radius: 1rem;
  background-color: var(--baseAccentColor);
  color: var(--baseTextColor);
  flex-direction: row;
  flex: 1 1 auto;
  justify-content: center;
  align-items: center;
  text-decoration: none;
  transition: var(--colorTransition), height 100ms, transform 100ms;
  text-align: center;
  border-width: thick;
  border-style: solid;
  border-color: transparent;
}

.bigText {
  font-size: 1.25rem;
  font-weight: bolder;
}

/* Simply a helper style to allow overriding of the existing hue*/
.playerCard {
  --hue: 300;
  --baseAccentColor: hsl(var(--hue), 50%, 65%);
  --baseTextColor: hsl(var(--hue), 50%, 10%);
}

.cardText {
  flex: 1;
  text-align: left;
}


.playerCardIcon {
  font-size: 2rem;
  justify-self: flex-end;
}

.noflex {
  flex: 0;
}

.taskCompleted {
  text-decoration: line-through;
  text-decoration-thickness: 0.2rem;
}

.selected {
  border-color: var(--baseTextColor);
  border-width: thick;
  border-style: solid;

  transition: var(--colorTransition), height 100ms, transform 100ms;
}

.button {
  align-self: flex-end;
  border-radius: 0.5rem;
  background-color: var(--baseTextColor);
  color: white;
  padding: 1rem;
  font-size: 1.5rem;

  transition: var(--colorTransition)
}

.spacer {
  flex: 1
}


#buttonHelp {
  display: flex;
  position: absolute;
  top: 1rem;
  background-color: #9C5586;
  padding: 10px;
  border-radius: 5px;
  border: none;
}

.canvasContainer {
  flex: 0 0 auto;
  height: 100%;
  width: 50%;
  margin-bottom: -1rem;
  /*Negate the margin of mainPanel*/
  position: relative;
  transition: height 200ms, width 200ms;
}

.controllerContainer {
  display: flex;
  height: 100%;
  width: 100%;
  transition: height 200ms, width 200ms;
}


.renderCanvas {
  height: 100%;
  width: 100%;
  display: block;
  filter: grayscale(1);
  position: absolute;
  outline: none;
  mix-blend-mode: luminosity;
  transition: height 200ms, width 200ms;
}

@media screen and (orientation: portrait) {
  .controllerContainer {
    flex-direction: column;

  }

  .canvasContainer {
    width: 100%;
    height: 30%;
  }
}

.canvasContainer.simple {
  height: 20%;
  width: 100%;
}

.controllerContainer.simple {
  flex-direction: column;
}

.renderCanvas.simple {
  height: 0%;
}


.slidersContainer {
  flex: 1;
  display: flex;
  width: 100%;
  flex-direction: column;
  justify-content: space-between;
  overflow: auto;
}

.slider {
  accent-color: var(--backgroundColor);
  flex: 1;
  transition: var(--colorTransition), accent-color 300ms;
  touch-action: none;
  flex: 8;
}

.panelButtons {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
}

.panelButton {
  align-self: flex-end;
  border-radius: 0.5rem;
  background-color: transparent;
  color: white;
  padding: 1rem;
  font-size: 1.5rem;
  justify-content: center;
  opacity: 0.5;
}

.panelButtonSelected {
  background-color: var(--baseTextColor);
  transition: var(--colorTransition)
}

.buttonHidden {
  height: 0;
  transform: scaleY(0);
  transition: height 100ms, transform 100ms;
}

.panelButtonIcon {
  font-size: 3rem;
}

.selectedButton {
  font-weight: bolder;
}

.sliderbox {
  display: flex;
  flex-direction: row;
  gap: 1rem;
}

.sliderinput {
  border-radius: 0.5rem;
}

.sliderinputText {
  text-align: center;
  font-weight: bold;
  font-family: "monospace";
  font-size: 1.5rem;
  width: 4ch;
}


/*This rremoves the arrows on the number input box*/
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/*This rremoves the arrows on the number input box*/
/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}

.feedbackArea {
  position: absolute;
  width: 100%;
  display: flex;
  bottom: 0;
}

.topBarArea {
  position: relative;
  display: flex;
  top: 0;
  margin: 1rem;
  align-items: center;
  gap: 0.5rem;
}

.topBarIcon {
  font-size: 3rem;
  color: var(--baseLayerColor);
}

.bubble {
  background-color: var(--baseLayerColor);
  color: var(--baseTextColor);
  font-size: larger;
  font-weight: bold;
  flex: 1 1 auto;
  margin: 2%;
  border-radius: 0.5rem;
  padding: 0.5rem;
  opacity: 0.8;
  transition: var(--colorTransition), transform 150ms;
  z-index: -1;
  transform-origin: left;
}

.taskBubble {
  margin: 0;
}

.robotSprite {
  background-image: url(../Textures/robot1.png);
  aspect-ratio: 1.46987;
  background-repeat: no-repeat;
  background-position: bottom;
  background-size: contain;
  flex: 0 1 auto;
  width: 15%;
  margin: 0 1rem;
  filter: grayscale(1);
  mix-blend-mode: luminosity;
  z-index: -1;
  transition: transform 150ms;
  transition-timing-function: cubic-bezier(0, 0, 0.75, 1.3);
}


.bloomSprite {
  aspect-ratio: 1;
  background-repeat: no-repeat;
  background-position: bottom;
  background-size: contain;
  flex: 0 1 auto;
  width: 15%;
  margin: 0 1rem;
  z-index: -1;
  transition: transform 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.75, 1.3);
}


@keyframes highlight {
  0% {
    border-width: 0.2rem;
    border-style: solid;
    border-color: transparent;
    border-radius: 0.5rem;
  }

  50% {
    border-width: 0.2rem;
    border-style: solid;
    border-color: white;
    border-radius: 0.5rem;
  }

  100% {
    border-width: 0.2rem;
    border-style: solid;
    border-color: transparent;
    border-radius: 0.5rem;
  }
}

.hidden {
  transform: translateY(200%) scale(0);
}

.bloomSprite.hidden {
  transform: translateY(200%) scale(1);
  transition: transform 400ms;
}

.diWheel {
  border-radius: 50%;
  height: 10rem;
  aspect-ratio: 1;
  position: relative;
  border: 5px solid black;
  touch-action: none;
}

.diDotWrapper {
  position: absolute;
  width: 100%;
  height: 100%;
  transition: transform 100ms;
}

.diDot {
  aspect-ratio: 1;
  width: 1rem;
  border-radius: 50%;
  border-style: solid;
  transition: var(--colorTransition);
  transform: translateX(-50%) translateY(-50%);
  top: 0;
  position: absolute;
  left: 50%;
  transform-origin: center;
}


.relationText {
  display: flex;
  text-align: center;
  font-weight: bold;
  font-family: "monospace";
  font-size: 2rem;
  position: absolute;
  text-align: center;
  width: 100%;
  height: 100%;
  margin-top: auto;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  align-content: center;
  flex-wrap: nowrap;
}